name: Sync Reading List

on:
  schedule:
    # Run daily at 8 AM UTC
    - cron: '0 8 * * *'
  workflow_dispatch:
    # Allow manual trigger
  push:
    branches: [ main ]
    paths:
      - 'scripts/**'
      - 'config.json'

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm i

    - name: Create data directory
      run: mkdir -p data

    - name: Fetch dev.to reading list
      run: |
        if [ -n "${{ secrets.DEVTO_API_KEY }}" ]; then
          npm run fetch:devto
        else
          echo "DEVTO_API_KEY not set, skipping fetch:devto"
        fi
      env:
        DEVTO_API_KEY: ${{ secrets.DEVTO_API_KEY }}

    - name: Fetch daily.dev bookmarks
      run: |
        if [ -n "${{ secrets.DAILYDEV_RSS_URL }}" ]; then
          npm run fetch:dailydev
        else
          echo "DAILYDEV_RSS_URL not set, skipping fetch:dailydev"
        fi
      env:
        DAILYDEV_RSS_URL: ${{ secrets.DAILYDEV_RSS_URL }}

  deploy:
    needs: sync
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci

    - name: Set Git identity
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"

    - name: Build frontend
      run: npm run build

    - name: Copy data to frontend/dist
      run: |
        echo "Current directory: $(pwd)"
        echo "Data directory contents:"
        ls -la data/
        echo "Frontend dist directory contents:"
        ls -la frontend/dist/ || echo "frontend/dist/ does not exist yet"
        echo "Copying data to frontend/dist..."
        cp -rv data/ frontend/dist/
        echo "After copy - frontend/dist/ contents:"
        ls -la frontend/dist/
        echo "Data files in frontend/dist/data/:"
        ls -la frontend/dist/data/ || echo "No data files found"

    - name: Deploy to GitHub Pages
      run: |
        git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/keshavashiya/readinglist.git
        npx gh-pages -d frontend/dist -u "github-actions-bot <support+actions@github.com>"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}